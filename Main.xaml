<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="962,10209.333333333334" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:rw="clr-namespace:Reply_GetCSSPropertyInfo_Activities.Web;assembly=Reply.GetCSSPropertyInfo.Activities" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:uasc="clr-namespace:UiPath.Activities.System.Collections;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>Microsoft.Azure.CognitiveServices.Vision.ComputerVision.Models</x:String>
      <x:String>UiPath.MicrosoftVision.Telemetry</x:String>
      <x:String>UiPath.MicrosoftVision.Activities</x:String>
      <x:String>Reply_GetCSSPropertyInfo_Activities.Web</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models.CV</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Microsoft.Azure.CognitiveServices.Vision.ComputerVision</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftVision</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftVision.Activities</AssemblyReference>
      <AssemblyReference>Reply.GetCSSPropertyInfo.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="972,10144.666666666666" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="Words" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="WordList" />
      <Variable x:TypeArguments="s:String[]" Name="ArrayWords" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadTextFile File="{x:Null}" sap2010:Annotation.AnnotationText="Load the text file to a string variable.&#xA;" Content="[Words]" DisplayName="Read Text File" FileName="sgb-words.txt" sap:VirtualizedContainerService.HintSize="910,127.33333333333333" sap2010:WorkflowViewState.IdRef="ReadTextFile_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ReadTextFile>
    <Assign sap2010:Annotation.AnnotationText="Split the string containing the words into a list of words." sap:VirtualizedContainerService.HintSize="910,116.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_9">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:String)">[WordList]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)" xml:space="preserve">[New List(Of String)(Words.Split(New String() {Environment.NewLine},
                                       StringSplitOptions.None))]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <uix:NApplicationCard AttachMode="ByInstance" DisplayName="Use Browser Chrome: Wordle Unlimited games - Wordle Today" sap:VirtualizedContainerService.HintSize="910,9710" sap2010:WorkflowViewState.IdRef="NApplicationCard_1" InteractionMode="DebuggerApi" ScopeGuid="5d0efbb3-9330-418c-bc15-cb5a4f5030a1" Version="V2">
      <uix:NApplicationCard.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="876,9490.666666666666" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Int32" Default="1" Name="Index" />
              <Variable x:TypeArguments="x:Int32" Default="1" Name="InnerIndex" />
              <Variable x:TypeArguments="x:String" Name="CellLetter" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <uix:NTypeInto ActivateBefore="True" sap2010:Annotation.AnnotationText="Input the initial word." ClickBeforeMode="Single" DisplayName="Type Into 'DIV board-container'" EmptyFieldMode="SingleLine" sap:VirtualizedContainerService.HintSize="814,253.33333333333334" sap2010:WorkflowViewState.IdRef="NTypeInto_1" ScopeIdentifier="5d0efbb3-9330-418c-bc15-cb5a4f5030a1" Text="adieu" Version="V3">
              <uix:NTypeInto.Target>
                <uix:TargetAnchorable BrowserURL="https://wordleunlimited.org/" DesignTimeRectangle="584, 217, 750, 572" DesignTimeScaleFactor="1.5" FriendlyName="'DIV board-container'" FullSelectorArgument="&lt;webctrl tag='GAME-APP' /&gt;&lt;webctrl id='board-container' shadowhostid='' tag='DIV' /&gt;" FuzzySelectorArgument="&lt;webctrl tag='GAME-APP' /&gt;&lt;webctrl id='board-container' shadowhostid='' tag='DIV' type='' class='' aaname='                    ' /&gt;" Guid="d331b888-f77f-4b45-bc34-80456ed6a37e" InformativeScreenshot="7089146649775fb1cae9459b48abe5bf.png" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Wordle Unlimited games - Wordle Today' /&gt;" SearchSteps="Selector, FuzzySelector" Version="V2" Visibility="Interactive" />
              </uix:NTypeInto.Target>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </uix:NTypeInto>
            <uix:NKeyboardShortcuts ActivateBefore="True" sap2010:Annotation.AnnotationText="Press the enter key." ClickBeforeMode="None" DisplayName="Keyboard Shortcuts" sap:VirtualizedContainerService.HintSize="814,216" sap2010:WorkflowViewState.IdRef="NKeyboardShortcuts_1" Shortcuts="[d(hk)][k(enter)][u(hk)]" Version="V3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </uix:NKeyboardShortcuts>
            <ui:InterruptibleWhile CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Main loop to iterate through each row of input cells, containing a max iterations of 5." Condition="True" DisplayName="While" sap:VirtualizedContainerService.HintSize="814,8825.333333333334" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1" MaxIterations="5">
              <ui:InterruptibleWhile.Body>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="780,8657.333333333334" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="Color" />
                    <Variable x:TypeArguments="s:String[]" Name="ResultList" />
                    <Variable x:TypeArguments="x:String" Name="NextWord" />
                    <Variable x:TypeArguments="x:Int32" Default="0" Name="iter" />
                    <Variable x:TypeArguments="scg:List(x:String)" Name="YellowChars" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="738,84.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[Color]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="738,84.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_8">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[InnerIndex]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">1</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InterruptibleWhile CurrentIndex="{x:Null}" Condition="True" DisplayName="While" sap:VirtualizedContainerService.HintSize="738,3937.3333333333335" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_2" MaxIterations="5">
                    <ui:InterruptibleWhile.Body>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="665.3333333333334,3800" sap2010:WorkflowViewState.IdRef="Sequence_11">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="ui:UiElement" Name="Element" />
                          <Variable x:TypeArguments="x:String" Name="NextWord" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence sap2010:Annotation.AnnotationText="Sequence that gets the target element cell using the click activity and fetches its color." sap:VirtualizedContainerService.HintSize="623.3333333333334,548.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_45">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click 'Div1'" sap:VirtualizedContainerService.HintSize="388,158.66666666666666" sap2010:WorkflowViewState.IdRef="NClick_3" KeyModifiers="None" MouseButton="Left" OutUiElement="[Element]" ScopeIdentifier="5d0efbb3-9330-418c-bc15-cb5a4f5030a1" Version="V3">
                            <uix:NClick.Target>
                              <uix:TargetAnchorable BrowserURL="https://wordleunlimited.org/" DesignTimeRectangle="736, 235, 83, 83" DesignTimeScaleFactor="1.5" FriendlyName="'DIV'" FullSelectorArgument="[string.Format(&quot;&lt;webctrl tag='GAME-APP' /&gt;&lt;webctrl shadowhostid='' tag='GAME-ROW' idx='{0}' /&gt;&lt;webctrl shadowhostid='' tag='GAME-TILE' idx='{1}' /&gt;&lt;webctrl shadowhostid='' tag='DIV' /&gt;&quot;, Index, InnerIndex)]" FuzzySelectorArgument="&lt;webctrl tag='GAME-APP' /&gt;&lt;webctrl shadowhostid='' tag='GAME-ROW' /&gt;&lt;webctrl shadowhostid='' tag='GAME-TILE' /&gt;&lt;webctrl shadowhostid='' tag='DIV' type='' class='tile' aaname='' /&gt;" Guid="688a7fdf-d113-4c96-86ea-669025790147" InformativeScreenshot="ed9464847fa8e110bbafeb89b2e07ea6.png" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Wordle Unlimited games - Wordle Today' /&gt;" SearchSteps="Selector, FuzzySelector" Version="V2" Visibility="Interactive" />
                            </uix:NClick.Target>
                          </uix:NClick>
                          <rw:get_CSS_Property_Value CSSPropertyKey="background-color" CSSPropertyValue="[Color]" DisplayName="get CSS Property Value" sap:VirtualizedContainerService.HintSize="388,195.33333333333334" sap2010:WorkflowViewState.IdRef="get_CSS_Property_Value_1" uiElement="[Element]" />
                        </Sequence>
                        <ui:IfElseIf DisplayName="Else If" sap:VirtualizedContainerService.HintSize="623.3333333333334,2999.3333333333335" sap2010:WorkflowViewState.IdRef="IfElseIf_2">
                          <ui:IfElseIf.ConditionBlocks>
                            <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                              <ui:IfElseIfBlock BlockType="If" Condition="[Color = &quot;rgb(83, 141, 78)&quot;]">
                                <ui:IfElseIfBlock.Then>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="450,488" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <uix:NGetAttributeGeneric x:TypeArguments="x:String" Attribute="visibleInnerText" DisplayName="Get green letter" sap:VirtualizedContainerService.HintSize="388,191.33333333333334" sap2010:WorkflowViewState.IdRef="NGetAttributeGeneric`1_4" InUiElement="[Element]" Result="[CellLetter]" Version="V3" />
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,146" sap2010:WorkflowViewState.IdRef="LogMessage_33" Message="[CellLetter]" />
                                  </Sequence>
                                </ui:IfElseIfBlock.Then>
                              </ui:IfElseIfBlock>
                              <ui:IfElseIfBlock BlockType="ElseIf" Condition="[Color = &quot;rgb(181, 159, 59)&quot;]">
                                <ui:IfElseIfBlock.Then>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,798.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <uix:NGetAttributeGeneric x:TypeArguments="x:String" Attribute="visibleInnerText" DisplayName="Get Yellow text" sap:VirtualizedContainerService.HintSize="434,191.33333333333334" sap2010:WorkflowViewState.IdRef="NGetAttributeGeneric`1_2" InUiElement="[Element]" Result="[CellLetter]" Version="V3" />
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,146" sap2010:WorkflowViewState.IdRef="LogMessage_12" Message="[CellLetter]" />
                                    <Assign sap:VirtualizedContainerService.HintSize="434,84.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_10">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[YellowList]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[YellowList+CellLetter.ToLower+" "]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,146" sap2010:WorkflowViewState.IdRef="LogMessage_32" Message="[&quot;YellowList &quot;+YellowList]" />
                                  </Sequence>
                                </ui:IfElseIfBlock.Then>
                              </ui:IfElseIfBlock>
                              <ui:IfElseIfBlock BlockType="ElseIf" Condition="[Color = &quot;rgb(58, 58, 60)&quot;]">
                                <ui:IfElseIfBlock.Then>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="572,1255.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <uix:NGetAttributeGeneric x:TypeArguments="x:String" Attribute="visibleInnerText" DisplayName="get black letter" sap:VirtualizedContainerService.HintSize="510,191.33333333333334" sap2010:WorkflowViewState.IdRef="NGetAttributeGeneric`1_6" InUiElement="[Element]" Result="[CellLetter]" Version="V3" />
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,146" sap2010:WorkflowViewState.IdRef="LogMessage_34" Message="[CellLetter]" />
                                    <If Condition="[String.IsNullOrEmpty(YellowList) Or ((Not String.IsNullOrEmpty(YellowList)) AndAlso (Not YellowList.Contains(CellLetter.ToLower)))]" sap:VirtualizedContainerService.HintSize="510,727.3333333333334" sap2010:WorkflowViewState.IdRef="If_9">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="476,544" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="434,84.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_16">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[BlackList]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[BlackList+CellLetter]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,146" sap2010:WorkflowViewState.IdRef="LogMessage_39" Message="[&quot;YellowList &quot;+ YellowList]" />
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,146" sap2010:WorkflowViewState.IdRef="LogMessage_35" Message="[&quot;BlackList &quot;+BlackList]" />
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_43" />
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </ui:IfElseIfBlock.Then>
                              </ui:IfElseIfBlock>
                            </sc:BindingList>
                          </ui:IfElseIf.ConditionBlocks>
                        </ui:IfElseIf>
                        <Assign sap:VirtualizedContainerService.HintSize="623.3333333333334,84.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_7">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[InnerIndex]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[InnerIndex+1]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ui:InterruptibleWhile.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InterruptibleWhile>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="738,146" sap2010:WorkflowViewState.IdRef="LogMessage_18" Message="[WordList.Count]" />
                  <ui:InterruptibleWhile CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="While loop to iterate through the wordlist and remove words containing blacklist characters." Condition="[iter &lt; WordList.Count]" DisplayName="While" sap:VirtualizedContainerService.HintSize="738,129.33333333333334" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_3">
                    <ui:InterruptibleWhile.Body>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="552,894.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_30">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Boolean" Name="ContainsBlack" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:IsMatch BuilderPattern="[BlackList]+" DisplayName="Is Text Matching" sap:VirtualizedContainerService.HintSize="510,60" sap2010:WorkflowViewState.IdRef="IsMatch_5" Input="[WordList(iter)]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ONEOF&quot;,&quot;OperationName&quot;:&quot;One of&quot;,&quot;OperationValue&quot;:&quot;BlackList&quot;,&quot;QuantifierFirstValue&quot;:&quot;+&quot;,&quot;QuantifierID&quot;:&quot;OOM&quot;,&quot;QuantifierName&quot;:&quot;At least one (1 or more)&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="[&quot;[&quot;+BlackList+&quot;]+&quot;]" RegexOption="IgnoreCase, Compiled" Result="[ContainsBlack]" />
                        <If sap2010:Annotation.AnnotationText="If the current word contains a blacklist letter, remove it and stay on the same index, else move to the next index." Condition="[ContainsBlack]" sap:VirtualizedContainerService.HintSize="510,707.3333333333334" sap2010:WorkflowViewState.IdRef="If_6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="376,308" sap2010:WorkflowViewState.IdRef="Sequence_31">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="Test" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <uasc:RemoveFromCollection x:TypeArguments="x:String" Index="{x:Null}" Collection="[WordList]" DisplayName="Remove From Collection" sap:VirtualizedContainerService.HintSize="334,220.66666666666666" sap2010:WorkflowViewState.IdRef="RemoveFromCollection`1_5" Item="[WordList(iter)]" RemoveAllElements="False" Result="[WordList]" />
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="476,172" sap2010:WorkflowViewState.IdRef="Sequence_33">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="434,84.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_12">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[iter]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[iter+1]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </ui:InterruptibleWhile.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InterruptibleWhile>
                  <Assign sap2010:Annotation.AnnotationText="Re-initialize iter to 0 for the yellow filtering." sap:VirtualizedContainerService.HintSize="738,115.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_13">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[iter]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">0</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <If sap2010:Annotation.AnnotationText="Only split yellow characters into a list if there exists any yellow letters, not when the string is null." Condition="[Not String.IsNullOrEmpty(YellowList)]" sap:VirtualizedContainerService.HintSize="738,2080.6666666666665" sap2010:WorkflowViewState.IdRef="If_10">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="704,1866.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_46">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="662,84.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_17">
                          <Assign.To>
                            <OutArgument x:TypeArguments="scg:List(x:String)">[YellowChars]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)(YellowList.Split(" "c))]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <uasc:RemoveFromCollection x:TypeArguments="x:String" Index="{x:Null}" sap2010:Annotation.AnnotationText="Remove empty string inside the YellowChars list caused by splitting." Collection="[YellowChars]" DisplayName="Remove From Collection" sap:VirtualizedContainerService.HintSize="662,264.6666666666667" sap2010:WorkflowViewState.IdRef="RemoveFromCollection`1_8" RemoveAllElements="False">
                          <uasc:RemoveFromCollection.Item>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </uasc:RemoveFromCollection.Item>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </uasc:RemoveFromCollection>
                        <Assign sap2010:Annotation.AnnotationText="Keep only distinct letters inside the YellowChars list." sap:VirtualizedContainerService.HintSize="662,115.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_19">
                          <Assign.To>
                            <OutArgument x:TypeArguments="scg:List(x:String)">[YellowChars]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="scg:List(x:String)">[YellowChars.Distinct().ToList()]</InArgument>
                          </Assign.Value>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Assign>
                        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="For filtering items that contain letters from YellowList, will not execute if yellowlist is empty" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="662,1194.6666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[YellowChars]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="x:String">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="628,975.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:Int32" Default="0" Name="iter" />
                                  <Variable x:TypeArguments="x:String" Name="variable1" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InterruptibleWhile CurrentIndex="{x:Null}" Condition="[iter &lt; WordList.Count]" DisplayName="While" sap:VirtualizedContainerService.HintSize="586,888" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_6">
                                  <ui:InterruptibleWhile.Body>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="552,750.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If Condition="[Not WordList(iter).Contains(currentItem)]" sap:VirtualizedContainerService.HintSize="510,663.3333333333334" sap2010:WorkflowViewState.IdRef="If_8">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,308" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <uasc:RemoveFromCollection x:TypeArguments="x:String" Index="{x:Null}" Collection="[WordList]" DisplayName="Remove From Collection" sap:VirtualizedContainerService.HintSize="334,220.66666666666666" sap2010:WorkflowViewState.IdRef="RemoveFromCollection`1_7" Item="[WordList(iter)]" RemoveAllElements="False" Result="[WordList]" />
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="476,172" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="434,84.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_18">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[iter]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[iter+1]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </ui:InterruptibleWhile.Body>
                                </ui:InterruptibleWhile>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ForEach>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_47" />
                    </If.Else>
                  </If>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="738,146" sap2010:WorkflowViewState.IdRef="LogMessage_21" Message="[WordList.Count.ToString+Environment.NewLine+&quot;Remaining words&quot;+Environment.NewLine]" />
                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="738,422" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[WordList]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,233.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_28">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,146" sap2010:WorkflowViewState.IdRef="LogMessage_15" Message="[currentItem]" />
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                  </ui:ForEach>
                  <Assign sap:VirtualizedContainerService.HintSize="738,84.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_2">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[Index]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[Index+1]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="738,146" sap2010:WorkflowViewState.IdRef="LogMessage_16" Message="[WordList.Count]" />
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="738,146" sap2010:WorkflowViewState.IdRef="LogMessage_17" Message="[CInt(Rnd()*WordList.Count)]" />
                  <Assign sap:VirtualizedContainerService.HintSize="738,84.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_11">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[NextWord]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[WordList(CInt(Rnd()*WordList.Count))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <uix:NTypeInto ActivateBefore="True" ClickBeforeMode="Single" DisplayName="Type Into 'DIV board-container'" EmptyFieldMode="SingleLine" sap:VirtualizedContainerService.HintSize="738,220" sap2010:WorkflowViewState.IdRef="NTypeInto_2" ScopeIdentifier="5d0efbb3-9330-418c-bc15-cb5a4f5030a1" Text="[NextWord]" Version="V3">
                    <uix:NTypeInto.Target>
                      <uix:TargetAnchorable BrowserURL="https://wordleunlimited.org/" DesignTimeRectangle="584, 217, 750, 572" DesignTimeScaleFactor="1.5" FriendlyName="'DIV board-container'" FullSelectorArgument="&lt;webctrl tag='GAME-APP' /&gt;&lt;webctrl id='board-container' shadowhostid='' tag='DIV' /&gt;" FuzzySelectorArgument="&lt;webctrl tag='GAME-APP' /&gt;&lt;webctrl id='board-container' shadowhostid='' tag='DIV' type='' class='' aaname='                    ' /&gt;" Guid="d331b888-f77f-4b45-bc34-80456ed6a37e" InformativeScreenshot="7089146649775fb1cae9459b48abe5bf.png" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Wordle Unlimited games - Wordle Today' /&gt;" SearchSteps="Selector, FuzzySelector" Version="V2" Visibility="Interactive" />
                    </uix:NTypeInto.Target>
                  </uix:NTypeInto>
                  <uix:NKeyboardShortcuts ActivateBefore="True" ClickBeforeMode="None" DisplayName="Keyboard Shortcuts" sap:VirtualizedContainerService.HintSize="738,182.66666666666666" sap2010:WorkflowViewState.IdRef="NKeyboardShortcuts_2" Shortcuts="[d(hk)][k(enter)][u(hk)]" Version="V3" />
                </Sequence>
              </ui:InterruptibleWhile.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InterruptibleWhile>
          </Sequence>
        </ActivityAction>
      </uix:NApplicationCard.Body>
      <uix:NApplicationCard.TargetApp>
        <uix:TargetApp Area="-11, -11, 1942, 1102" BrowserType="Chrome" IconBase64="iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAIAAAD8GO2jAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAOiSURBVEhL7VT5M5tRFO3fiSqJiFimVBW1a+lUDbW0GAytSSKxRmvfpfZipkZtJbHMlChiqQSR1+O7z0t8MmM6U/3JnfPD++6595333XvfexBuDLlT3Avciv8ooDEolLqHhBB9oPALhOg5C4QblTJWpQ8UbJhBEWFUkZ8LwBVnin5vLnxnLgDy+3PILxBRp3o7kEts4WBeVL3am9UYlG96s4nFJvGmGGxIFBcIrQ1KbUtkV+ZyuxJaYtWGYMGmtT3nnGRZXemq2kfEaoyKxw2aA8cB5xjL7EgJvWI9JYKmddfCQxgrGspX6lGKS0qhC6ger+CEZPqpmmCtP7FQyu7K4ARjG/vrGqMSINYjgISuhQ4exVjrXIvYQqHzH7GYOSHZ5Po4VHmizh96nGCsd6lbJAIeATSneCifRzE2vzWn0l/+Js6CBmwd/uSEZDvHtqj6MDomlCbWxjjBGHogTcENAVT8mSn65Ow3xR06D580RaFuqGZmR/KF+4L8ZG7mftmZhuJAI7IudPtoi/yO85P4lhjRPMAjACBhYfs7hcJyerMxr6hPzWQVeSAjlLRfP4JC/zPaPfKL2/Oi+YRrAqidabaRQmF1M3p4UIFx6wh5lmwLyztLtEZZQAFVXv1vmW3ybgBwTQDnze17xWMZm9qYRHRkvdp2tE2e5m8N4gS2yzaog7R+5pUB8sCQLruk1wRQ8ZjGCLvDTtHoJDwYalScPHn9r3EHaQ3ni44UbLdhXyeP3bEf3RghrhjhmgCAAZjZnKYEt9ud+Onph4lK+nSeO3HbMQhOl5M81eOVsc1RZxdn9Dm9OeU9PwS5AGpimNZSAqxsuNi8Mkhry+6KujYIXV39tUKewR/9BQO5tIZ53z4BuQBmIKszXdRkzDqyad+gdc9iJ/KB7kV+H617lr6lHlpLFUuVjRAgF8Bco3Wiq6euUzGCpcPFSl0AilDypYg8KM7x6RGtcRNxH8ULISAXADB5o5ZhShN25jpN+hyHGwSgMaINwlBJvBmyrQDfArKnDba2ZxXjAQ30gxNXVjFaikSxiYAPAXq6XRfnPFWy/uUe0UAs0A9OSMb/r9bzQgj4EEAdAby6PFuy8pEScUB0QrSBbBUD5vX+eMOHAIAzDiz38WzJklvj8WfEUhs4IVnXQnuw1k+ke8O3AH42vT0Jc02oGivHhMhiKkfLREBqa8Lf/QG2w52iqQd8dg+FEgE40M0TEHwL/EPcC9yKOxYwhvwBRKBOPc3RXSEAAAAASUVORK5CYII=" InformativeScreenshot="247658b83eadf2fc83389a0547cf07d5.jpg" Selector="&lt;html app='chrome.exe' title='Wordle Unlimited games - Wordle Today' /&gt;" Title="Wordle Unlimited games - Wordle Today" Url="https://wordleunlimited.org/" />
      </uix:NApplicationCard.TargetApp>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </uix:NApplicationCard>
  </Sequence>
</Activity>